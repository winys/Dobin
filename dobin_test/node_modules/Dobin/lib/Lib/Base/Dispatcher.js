//Dispatcher.js 用于提供路由功能

module.exports = {
	//初始化
	init : function( http ) {
		this.http = http;
		return this;
	},

	//运行，结果写到this.http中
	run : function() {
		this.parsePathName();		
	},

	//解析pathname
	parsePathName : function() {
		//规范化pathname
		var paths = this.http.pathname,
			groups = $.Config("group_list"),
			nameReg = /^[A-Za-z\_]\w*$/,
			prefix = new RegExp( "^" + $.Config("url_pathname_prefix") ),
			suffix = new RegExp( $.Config("url_pathname_suffix") + "$" ),
			resource_reg = $.Config("resource_reg")
			;
		
		//去除前后缀
		paths = this.http.pathname = paths.replace(prefix,"").replace(suffix,"");
		paths = paths.replace(/(^\/*)|(\/*$)/g, "");

		//检查是否为静态资源		
		if(resource_reg.test(paths)){
			this.http.isResource = true;
		}

		paths = paths.split(/\s*\/\s*/g);
		//解析pathname
		this.http.group = 
			groups.length && paths[0] && groups.indexOf($.ucfirst(paths[0]))>-1
			? this.http.group = paths.shift() 
			: $.Config("default_group");
		this.http.controller = 
			nameReg.test(paths[0])
			? paths.shift()
			: $.Config("default_controller")
			;
		this.http.action = 
			nameReg.test(paths[0])
			? paths.shift()
			: $.Config("default_action")
			;
	},
}